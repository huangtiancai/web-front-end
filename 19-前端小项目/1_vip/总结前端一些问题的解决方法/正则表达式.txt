正则表达式直接量也被定义为包含在一对斜杠(/)之间的字符.

^ 匹配的是字符的开头,在多行检索中,匹配的是一行的开头 
$ 匹配的是字符的结尾,在多行检索中,匹配的是一行的结尾 


* 匹配前面元字符0次或多次，/ba*/将匹配b,ba,baa,baaa 
+ 匹配前面元字符1次或多次，/ba*/将匹配ba,baa,baaa 
? 匹配前面元字符0次或1次，/ba*/将匹配b,ba 

如果想在正则表达式中使用特殊的标点符号,必须在它们之前加上一个 "\" . （点.前面一般都加\）

[-+.]表示减号、加号、点，之中有一个。就是有一个”-“或者有一个”+“或者有一个”.“




{n, m} 匹配前一项至少n次,但是不能超过m次 
{n, } 匹配前一项n次,或者多次 
{n} 匹配前一项恰好n次 
? 匹配前一项0次或1次,也就是说前一项是可选的. 等价于 {0, 1} 
+ 匹配前一项1次或多次,等价于{1,} 
* 匹配前一项0次或多次.等价于{0,} 

/\d{2, 4}/ //匹配2到4间的数字. 

/\w{3} \d?/ //匹配三个单字字符和一个任意的数字. 

/\s+java\s+/ //匹配字符串"java" ,并且该串前后可以有一个或多个空格. 

/[^"] * / //匹配零个或多个非引号字符. 



2.字符类 

将单独的直接符放进中括号内就可以组合成字符类.一个字符类和它所包含的任何一个字符都匹配,所以正则表达式 / [abc] / 和字母 "a" , "b" , "c" 中的任何一个都匹配.另外还可以定义否定字符类,这些类匹配的是除那些包含在中括号之内的字符外的所有字符.定义否定字符尖时,要将一个 ^ 符号作为从左中括号算起的第一个字符.正则表达式的集合是 / [a-zA-z0-9] / . 

由于某些字符类非常常用,所以JavaScript的正则表达式语法包含一些特殊字符和转义序列来表示这些常用的类.例如, \s 匹配的是空格符,制表符和其它空白符, \s 匹配的则是空白符之外的任何字符. 

正则表灰式的字符类 

字符 匹配 
____________________________________________________ 

[...] 位于括号之内的任意字符 
[^...] 不在括号之中的任意字符 
. 除了换行符之外的任意字符,等价于[^\n] 
\w 任何单字字符, 等价于[a-zA-Z0-9] 
\W 任何非单字字符,等价于[^a-zA-Z0-9] 
\s 任何空白符,等价于[\ t \ n \ r \ f \ v] 
\S 任何非空白符,等价于[^\ t \ n \ r \ f \ v] 
\d 任何数字,等价于[0-9] 
\D 除了数字之外的任何字符,等价于[^0-9] 
[\b] 一个退格直接量(特例) 


正则表达式的() [] {}有不同的意思。

() 是为了提取匹配的字符串。表达式中有几个()就有几个相应的匹配字符串。

(\s*)表示连续空格的字符串。

[]是定义匹配的字符范围。比如 [a-zA-Z0-9] 表示相应位置的字符要匹配英文字符和数字。[\s*]表示空格或者*号。

{}一般用来表示匹配的长度，比如 \s{3} 表示匹配三个空格，\s[1,3]表示匹配一到三个空格。

(0-9) 匹配 '0-9′ 本身。 [0-9]* 匹配数字（注意后面有 *，可以为空）[0-9]+ 匹配数字（注意后面有 +，不可以为空）{1-9} 写法错误。

[0-9]{0,9} 表示长度为 0 到 9 的数字字符串。



字符

说明

^

匹配输入字符串的开始位置。要匹配 "^" 字符本身，请使用 "/^"

$

匹配输入字符串的结尾位置。要匹配 "$" 字符本身，请使用 "/$"

( )

标记一个子表达式的开始和结束位置。要匹配小括号，请使用 "/(" 和 "/)"

[ ]

用来自定义能够匹配 '多种字符' 的表达式。要匹配中括号，请使用 "/[" 和 "/]"

{ }

修饰匹配次数的符号。要匹配大括号，请使用 "/{" 和 "/}"

.

匹配除了换行符（/n）以外的任意一个字符。要匹配小数点本身，请使用 "/."

?

修饰匹配次数为 0 次或 1 次。要匹配 "?" 字符本身，请使用 "/?"

+

修饰匹配次数为至少 1 次。要匹配 "+" 字符本身，请使用 "/+"

*

修饰匹配次数为 0 次或任意次。要匹配 "*" 字符本身，请使用 "/*"

|

左右两边表达式之间 "或" 关系。匹配 "|" 本身，请使用 "/|"

